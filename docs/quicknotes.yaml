openapi: 3.0.3
info:
  title: Quicknotes - OpenAPI 3.0
  version: 0.0.1
servers:
  - url: https://quicknotes-project.github.io
    description: redirect to ngrok tunnel (listens on /api!)

tags:
  - name: user
    description: Authentication & user data
  - name: note
    description: Operations with authenticated user's notes
  - name: tag
    description: Operations with authenticated user's tags

paths:
  /register:
    post:
      security: []
      tags:
        - user
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successfully registered a new user.
        "400":
          description: Client failed to provide valid data in body.
        "409":
          description: Username conflict.
        "500":
          description: Internal server error.

  /login:
    post:
      security: []
      tags:
        - user
      summary: Log in with user credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
      responses:
        "200":
          description: Successfully logged in
          headers:
            Set-Cookie:
              description: Cookie with session ID
              schema:
                type: string
                example: session_id=123; max-age=2592000
        "400":
          description: Client failed to provide valid data in body.
        "401":
          description: Invalid credentials provided in body.
        "500":
          description: Internal server error.

  /logout:
    post:
      summary: Log out
      tags:
        - user
      responses:
        "200":
          description: Successfully logged out.
          headers:
            Set-Cookie:
              description: Cookie unsetting session ID
              schema:
                type: string
                example: session_id=unset; max-age=0
        "401":
          description: Client was not logged in.
        "500":
          description: Internal server error.

  /user:
    get:
      summary: Get user data
      tags:
        - user
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNames"
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

    put:
      summary: Update user data and/or credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      tags:
        - user
      responses:
        "200":
          description: Successfully updated.
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

  /notes:
    get:
      tags:
        - note
      summary: Get metadata of all user's notes
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteMeta"
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

  /note:
    get:
      tags:
        - note
      summary: Get note's data by ID
      parameters:
        - in: query
          name: noteID
          schema:
            type: integer
          required: true
          description: Note's ID
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

    post:
      tags:
        - note
      summary: Create a new note
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
              examples:
                NewNote:
                  $ref: "#/components/examples/NewNote"
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

    put:
      tags:
        - note
      summary: Update an existing note by ID
      parameters:
        - in: query
          name: noteID
          schema:
            type: integer
          required: true
          description: Note's ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/NoteMeta"
                - $ref: "#/components/schemas/NoteContent"
      responses:
        "200":
          description: Successful operation.
        "400":
          description: Client failed to provide required parameters.
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

    delete:
      tags:
        - note
      summary: Delete a note by ID
      parameters:
        - in: query
          name: noteID
          schema:
            type: integer
          required: true
          description: Note's ID
      responses:
        "200":
          description: Successful operation.
        "400":
          description: Client failed to set valid noteID query parameter.
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

  /tags:
    get:
      tags:
        - tag
      summary: Get all user's tags
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tag"
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

  /tag:
    put:
      tags:
        - tag
      summary: Edit tag's name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tagID:
                  type: number
                  example: 123
                title:
                  type: string
                  example: "computer science"
      responses:
        "200":
          description: Successful operation.
        "401":
          description: Client not authorized.
        "403":
          description: Invalid tagID supplied.
        "500":
          description: Internal server error.

    delete:
      tags:
        - tag
      summary: Remove a tag
      parameters:
        - in: query
          name: tagID
          schema:
            type: integer
          required: true
          description: Note's ID
          example: 123
      responses:
        "200":
          description: Successful operation.
        "401":
          description: Client not authorized.
        "403":
          description: Invalid tagID supplied.
        "500":
          description: Internal server error.

  /notetag:
    post:
      tags:
        - notetag
      summary: Bind a tag to a note
      description: Pass a tag's name to bind to a note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                noteID:
                  type: integer
                  example: 213
                title:
                  type: string
                  example: "programming"
      responses:
        "200":
          description: Successful operation.
        "401":
          description: Client not authorized.
        "403":
          description: Invalid noteID supplied.
        "500":
          description: Internal server error.

    put:
      tags:
        - notetag
      summary: Rename note's tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                noteID:
                  type: integer
                  example: 213
                tagID:
                  type: number
                  example: 123
                title:
                  type: string
                  example: "computer science"
      responses:
        "200":
          description: Successful operation.
        "401":
          description: Client not authorized.
        "403":
          description: Invalid noteID or tagID supplied.
        "500":
          description: Internal server error.

    delete:
      tags:
        - notetag
      summary: Remove a tag from a note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                noteID:
                  type: integer
                  example: 213
                tagID:
                  type: number
                  example: 123
      responses:
        "200":
          description: Successful operation.
        "401":
          description: Client not authorized.
        "403":
          description: Invalid noteID or tagID supplied.
        "500":
          description: Internal server error.

  /find:
    get:
      tags:
        - search
      summary: Perform search by note's title and/or tags
      parameters:
        - in: query
          name: content
          schema:
            type: string
          required: false
          description: string to search for in notes' titles
        - in: query
          name: tags
          schema:
            type: string
          required: false
          description: list of tags
          example: "grammar,japanese"
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteMeta"
        "401":
          description: Client not authorized.
        "500":
          description: Internal server error.

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_id

  schemas:
    UserBase:
      type: object
      properties:
        username:
          type: string
          example: john_doe

    UserNames:
      allOf:
        - $ref: "#/components/schemas/UserBase"
        - type: object
          properties:
            fullname:
              type: string
              example: John Doe

    UserCredentials:
      allOf:
        - $ref: "#/components/schemas/UserBase"
        - type: object
          properties:
            password:
              type: string
              format: password
              example: qwerty123

    User:
      allOf:
        - $ref: "#/components/schemas/UserCredentials"
        - $ref: "#/components/schemas/UserNames"

    TaggedEntity:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"

    NoteMeta:
      type: object
      properties:
        noteID:
          type: integer
          readOnly: true
          example: 123
        createdAt:
          type: string
          format: date-time
          readOnly: true
          example: 2019-09-07 15:50:00
        modifiedAt:
          type: string
          format: date-time
          readOnly: true
          example: 2019-10-15 20:02:00
        title:
          type: string
          example: "'wa' and 'ga' suffixes usage"

    NoteContent:
      type: object
      properties:
        content:
          type: string
          example: "God only knows"

    Note:
      allOf:
        - $ref: "#/components/schemas/NoteMeta"
        - $ref: "#/components/schemas/TaggedEntity"
        - $ref: "#/components/schemas/NoteContent"

    Tag:
      type: object
      properties:
        tagID:
          type: integer
          example: 137
        title:
          type: string
          example: japanese

  examples:
    NewNote:
      summary: A newly created note
      value:
        noteID: 123
        title: "Note 2022-12-01 10:24:48"
        createdAt: 2022-12-01 10:24:48
        modifiedAt: 2022-12-01 10:24:48
        tags: []
        content: ""

security:
  - cookieAuth: []
